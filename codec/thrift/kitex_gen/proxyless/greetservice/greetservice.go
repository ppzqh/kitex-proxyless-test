// Code generated by Kitex v0.3.2. DO NOT EDIT.

package greetservice

import (
	"context"
	"github.com/cloudwego/kitex-proxyless-test/codec/thrift/kitex_gen/proxyless"
	"github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
)

func serviceInfo() *kitex.ServiceInfo {
	return greetServiceServiceInfo
}

var greetServiceServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "GreetService"
	handlerType := (*proxyless.GreetService)(nil)
	methods := map[string]kitex.MethodInfo{
		"SayHello": kitex.NewMethodInfo(sayHelloHandler, newGreetServiceSayHelloArgs, newGreetServiceSayHelloResult, false),
	}
	extra := map[string]interface{}{
		"PackageName": "proxyless",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.3.2",
		Extra:           extra,
	}
	return svcInfo
}

func sayHelloHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*proxyless.GreetServiceSayHelloArgs)
	realResult := result.(*proxyless.GreetServiceSayHelloResult)
	success, err := handler.(proxyless.GreetService).SayHello(ctx, realArg.Request)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newGreetServiceSayHelloArgs() interface{} {
	return proxyless.NewGreetServiceSayHelloArgs()
}

func newGreetServiceSayHelloResult() interface{} {
	return proxyless.NewGreetServiceSayHelloResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) SayHello(ctx context.Context, request *proxyless.HelloRequest) (r *proxyless.HelloResponse, err error) {
	var _args proxyless.GreetServiceSayHelloArgs
	_args.Request = request
	var _result proxyless.GreetServiceSayHelloResult
	if err = p.c.Call(ctx, "SayHello", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
